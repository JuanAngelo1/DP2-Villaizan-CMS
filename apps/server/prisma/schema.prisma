generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model vi_persona {
  id                   String       @id @db.VarChar(50)
  tipodocumento        String?      @db.VarChar(5)
  numerodocumento      String?      @db.VarChar(20)
  razoneliminacion     String?      @db.VarChar(255)
  estado               String       @db.VarChar(50)
  estaactivo           Boolean      @default(true)
  desactivadoen        DateTime?    @db.Timestamp(6)
  creadoen             DateTime     @default(now()) @db.Timestamp(6)
  actualizadoen        DateTime     @default(now()) @db.Timestamp(6)
  usuariocreacion      String       @db.VarChar(50)
  usuarioactualizacion String?      @db.VarChar(50)
  vi_usuario           vi_usuario[]
}

model vi_usuario {
  id                   String      @id @db.VarChar(50)
  nombre               String      @db.VarChar(100)
  apellido             String      @db.VarChar(100)
  concuenta            Boolean
  numerotelefono       String?     @db.VarChar(15)
  correo               String      @unique @db.VarChar(150)
  contrasena           String      @db.VarChar(255)
  fechaultimologin     DateTime?   @db.Timestamp(6)
  id_persona           String?     @db.VarChar(50)
  estaactivo           Boolean     @default(true)
  desactivadoen        DateTime?   @db.Timestamp(6)
  creadoen             DateTime    @default(now()) @db.Timestamp(6)
  actualizadoen        DateTime    @default(now()) @db.Timestamp(6)
  usuariocreacion      String      @db.VarChar(50)
  usuarioactualizacion String?     @db.VarChar(50)
  vi_persona           vi_persona? @relation(fields: [id_persona], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_persona")
}

model cms_categoria_publicacion {
  id              Int               @id @default(autoincrement())
  nombre          String            @db.VarChar(255)
  descripcion     String?
  fechacreacion   DateTime          @default(now()) @db.Timestamp(6)
  color           String?           @db.VarChar(20)
  estaactivo      Boolean           @default(true)
  cms_publicacion cms_publicacion[]
}

model cms_estado_publicacion {
  id              Int               @id
  nombre          String            @db.VarChar(255)
  descripcion     String?
  fechacreacion   DateTime          @default(now()) @db.Timestamp(6)
  color           String?           @db.VarChar(20)
  estaactivo      Boolean           @default(true)
  cms_publicacion cms_publicacion[]
}

model cms_etiqueta_publicacion {
  id                         Int                          @id @default(autoincrement())
  nombre                     String                       @db.VarChar(255)
  descripcion                String?
  fechacreacion              DateTime                     @default(now()) @db.Timestamp(6)
  color                      String?                      @db.VarChar(20)
  estaactivo                 Boolean                      @default(true)
  cms_publicacion_x_etiqueta cms_publicacion_x_etiqueta[]
}

model cms_publicacion {
  idpublicacion              Int                          @id @default(autoincrement())
  titulo                     String                       @db.VarChar(255)
  urlimagen                  String?                      @db.VarChar(255)
  descripcion                String
  fechacreacion              DateTime                     @default(now()) @db.Timestamp(6)
  fechapublicacion           DateTime?                    @db.Timestamp(6)
  fechaultimamodificacion    DateTime                     @default(now()) @db.Timestamp(6)
  estaactivo                 Boolean                      @default(true)
  idcategoria                Int?
  idtipopublicacion          Int?
  idestadopublicacion        Int?
  cms_categoria_publicacion  cms_categoria_publicacion?   @relation(fields: [idcategoria], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_categoria")
  cms_estado_publicacion     cms_estado_publicacion?      @relation(fields: [idestadopublicacion], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_estado_publicacion")
  cms_tipo_publicacion       cms_tipo_publicacion?        @relation(fields: [idtipopublicacion], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tipo_publicacion")
  cms_publicacion_x_etiqueta cms_publicacion_x_etiqueta[]
}

model cms_publicacion_x_etiqueta {
  idpublicacion            Int
  idetiqueta               Int
  cms_etiqueta_publicacion cms_etiqueta_publicacion @relation(fields: [idetiqueta], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_etiqueta")
  cms_publicacion          cms_publicacion          @relation(fields: [idpublicacion], references: [idpublicacion], onDelete: NoAction, onUpdate: NoAction, map: "fk_publicacion")

  @@id([idpublicacion, idetiqueta])
}

model cms_tipo_publicacion {
  id              Int               @id
  nombre          String            @db.VarChar(255)
  descripcion     String?
  fechacreacion   DateTime          @default(now()) @db.Timestamp(6)
  estaactivo      Boolean           @default(true)
  cms_publicacion cms_publicacion[]
}