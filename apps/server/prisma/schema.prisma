generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model vi_persona {
  id                   String       @id @db.VarChar(50)
  tipodocumento        String?      @db.VarChar(5)
  numerodocumento      String?      @db.VarChar(20)
  razoneliminacion     String?      @db.VarChar(255)
  estado               String       @db.VarChar(50)
  estaactivo           Boolean      @default(true)
  desactivadoen        DateTime?    @db.Timestamp(6)
  creadoen             DateTime     @default(now()) @db.Timestamp(6)
  actualizadoen        DateTime     @default(now()) @db.Timestamp(6)
  usuariocreacion      String       @db.VarChar(50)
  usuarioactualizacion String?      @db.VarChar(50)
  vi_usuario           vi_usuario[]
}

model vi_publicacion {
  id                        Int                         @id @default(autoincrement())
  titulo                    String                      @db.VarChar(255)
  urlimagen                 String?                     @db.VarChar(255)
  descripcion               String
  fechacreacion             DateTime                    @default(now()) @db.Timestamp(6)
  fechapublicacion          DateTime?                   @db.Timestamp(6)
  fechaultimamodificacion   DateTime                    @default(now()) @db.Timestamp(6)
  estaactivo                Boolean                     @default(true)
  id_categoria_publicacion  Int?
  id_tipo_publicacion       Int?
  id_estado_publicacion     Int?
  vi_categoria_publicacion  vi_categoria_publicacion?   @relation(fields: [id_categoria_publicacion], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_categoria")
  vi_estado_publicacion     vi_estado_publicacion?      @relation(fields: [id_estado_publicacion], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_estado_publicacion")
  vi_tipo_publicacion       vi_tipo_publicacion?        @relation(fields: [id_tipo_publicacion], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tipo_publicacion")
  vi_publicacion_x_etiqueta vi_publicacion_x_etiqueta[]
}

model vi_usuario {
  id                   String      @id @db.VarChar(50)
  nombre               String      @db.VarChar(100)
  apellido             String      @db.VarChar(100)
  concuenta            Boolean
  numerotelefono       String?     @db.VarChar(15)
  correo               String      @unique @db.VarChar(150)
  contrasena           String      @db.VarChar(255)
  fechaultimologin     DateTime?   @db.Timestamp(6)
  id_persona           String?     @db.VarChar(50)
  estaactivo           Boolean     @default(true)
  desactivadoen        DateTime?   @db.Timestamp(6)
  creadoen             DateTime    @default(now()) @db.Timestamp(6)
  actualizadoen        DateTime    @default(now()) @db.Timestamp(6)
  usuariocreacion      String      @db.VarChar(50)
  usuarioactualizacion String?     @db.VarChar(50)
  vi_persona           vi_persona? @relation(fields: [id_persona], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_persona")
}

model vi_categoria_publicacion {
  id             Int              @id @default(autoincrement())
  nombre         String           @db.VarChar(255)
  descripcion    String?
  fechacreacion  DateTime         @default(now()) @db.Timestamp(6)
  color          String?          @db.VarChar(20)
  estaactivo     Boolean          @default(true)
  vi_publicacion vi_publicacion[]
}

model vi_estado_publicacion {
  id             Int              @id
  nombre         String           @db.VarChar(255)
  descripcion    String?
  fechacreacion  DateTime         @default(now()) @db.Timestamp(6)
  color          String?          @db.VarChar(20)
  estaactivo     Boolean          @default(true)
  vi_publicacion vi_publicacion[]
}

model vi_etiqueta_publicacion {
  id                        Int                         @id @default(autoincrement())
  nombre                    String                      @db.VarChar(255)
  descripcion               String?
  fechacreacion             DateTime                    @default(now()) @db.Timestamp(6)
  color                     String?                     @db.VarChar(20)
  estaactivo                Boolean                     @default(true)
  vi_publicacion_x_etiqueta vi_publicacion_x_etiqueta[]
}

model vi_publicacion_x_etiqueta {
  id_publicacion          Int
  id_etiqueta_publicacion Int
  vi_etiqueta_publicacion vi_etiqueta_publicacion @relation(fields: [id_etiqueta_publicacion], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_etiqueta")
  vi_publicacion          vi_publicacion          @relation(fields: [id_publicacion], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_publicacion")

  @@id([id_publicacion, id_etiqueta_publicacion])
}

model vi_tipo_publicacion {
  id             Int              @id
  nombre         String           @db.VarChar(255)
  descripcion    String?
  fechacreacion  DateTime         @default(now()) @db.Timestamp(6)
  estaactivo     Boolean          @default(true)
  vi_publicacion vi_publicacion[]
}
